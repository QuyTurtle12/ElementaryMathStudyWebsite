@page
@model ElementaryMathStudyWebsite.RazorPage.Pages.ChapterPages.IndexModel

@{
    ViewData["Title"] = "Index";
}
<h1>Index</h1>

@* <p>
    <a asp-page="Create">Create New</a>
</p> *@

<form method="get">
    <div class="form-group">
        <label for="searchKeyword">Search Chapter:</label>
        <input type="text" id="searchKeyword" name="SearchKeyword" value="@Model.SearchKeyword" class="form-control" placeholder="Enter keyword..." />
        <button type="submit" class="btn btn-primary mt-2">Search</button>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Chapter[0].Number)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Chapter[0].ChapterName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Chapter[0].Status)
            </th>
            @* <th>
            @Html.DisplayNameFor(model => model.Chapter[0].Subject)
            </th> *@
            <th>
                @Html.DisplayNameFor(model => model.Chapter[0].QuizName)
            </th>
            @* <th>
            @Html.DisplayNameFor(model => model.Chapter[0].CreatedBy)
            </th>
            <th>
            @Html.DisplayNameFor(model => model.Chapter[0].LastUpdatedBy)
            </th>
            <th>
            @Html.DisplayNameFor(model => model.Chapter[0].DeletedBy)
            </th>
            <th>
            @Html.DisplayNameFor(model => model.Chapter[0].CreatedTime)
            </th>
            <th>
            @Html.DisplayNameFor(model => model.Chapter[0].LastUpdatedTime)
            </th>
            <th>
            @Html.DisplayNameFor(model => model.Chapter[0].DeletedTime)
            </th> *@
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Chapter)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Number)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ChapterName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.QuizName)
                </td>
                @* <td>
            @Html.DisplayFor(modelItem => item.SubjectId)
            </td> *@
                @* <td>
            @if (item.Quiz != null)
            {
            @Html.DisplayFor(modelItem => item.Quiz.QuizName)
            }
            else
            {
            <span>N/A</span>
            }
            </td> *@
                @* <td>
            @Html.DisplayFor(modelItem => item.CreatedBy)
            </td>
            <td>
            @Html.DisplayFor(modelItem => item.LastUpdatedBy)
            </td>
            <td>
            @Html.DisplayFor(modelItem => item.DeletedBy)
            </td>
            <td>
            @Html.DisplayFor(modelItem => item.CreatedTime)
            </td>
            <td>
            @Html.DisplayFor(modelItem => item.LastUpdatedTime)
            </td>
            <td>
            @Html.DisplayFor(modelItem => item.DeletedTime)
            </td>
            <td>
            <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
            <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
            <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
            </td> *@
            </tr>
        }
    </tbody>
</table>

<div class="pagination-controls d-flex justify-content-center align-items-center mt-3">
    @if (Model.CurrentPage > 1)
    {
        <a asp-page="./Index" asp-route-SearchKeyword="@Model.SearchKeyword" asp-route-pageNumber="@(Model.CurrentPage - 1)" class="btn btn-secondary">Previous</a>
    }
    <span>Page @Model.CurrentPage of @Model.TotalPages</span>
    @if (Model.CurrentPage < Model.TotalPages)
    {
        <a asp-page="./Index" asp-route-SearchKeyword="@Model.SearchKeyword" asp-route-pageNumber="@(Model.CurrentPage + 1)" class="btn btn-secondary">Next</a>
    }
</div>

@functions {
    public string HtmlToPlainText(string htmlContent)
    {
        if (string.IsNullOrWhiteSpace(htmlContent))
            return string.Empty;

        string plainText = System.Net.WebUtility.HtmlDecode(htmlContent);
        plainText = plainText.Replace("<p>", "").Replace("</p>", "\n");
        plainText = System.Text.RegularExpressions.Regex.Replace(plainText, @"\*(.*?)\*", "<b>$1</b>");
        plainText = plainText.Replace("\n", "<br/>");

        return plainText;
    }
}

<style>
    .wrap-text {
        word-wrap: break-word; /* Allows breaking long words to the next line */
        word-break: break-word; /* Ensures long strings break properly */
        max-width: 300px; /* Optional: Set a max width for better layout control */
        white-space: normal; /* Ensures content wraps to the next line */
    }
</style>