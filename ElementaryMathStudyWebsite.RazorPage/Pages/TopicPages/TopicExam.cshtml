@page "/TopicExam/{quizId}/{chapterId}"
@model ElementaryMathStudyWebsite.RazorPage.Pages.TopicPages.TopicExamModel

@{
    ViewData["Title"] = "Take Topic Exam";
}

<h1>Topic Exam</h1>

@if (TempData["AlertMessage"] != null)
{
    <div class="alert alert-warning alert-dismissible fade show" role="alert">
        @TempData["AlertMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
    <div>
        <a asp-page="Index">Back to Topics</a>
    </div>
}
else
{
    <form method="post">
        <input type="hidden" asp-for="QuizId" />

        @if (!ViewData.ModelState.IsValid)
        {
            <div class="alert alert-danger mt-3">
                <ul>
                    @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                    {
                        <li>@error.ErrorMessage</li>
                    }
                </ul>
            </div>
        }

        @foreach (var question in Model.Questions.Select((value, index) => new { value, index }))
        {
            <div>
                <h3 style="display: inline-block;">@(question.index + 1). </h3>
                <h5 style="display: inline-block; vertical-align: top;">@Html.Raw(FormatQuestionContext(question.value.QuestionContext))</h5>
                @foreach (var option in question.value.Options)
                {
                    <div>
                        <input type="radio" name="Answer_@question.value.Id" value="@option.Id" id="Option_@option.Id" />
                        <label for="Option_@option.Id">@option.Answer</label>
                    </div>
                }
            </div>
        }

        <button type="submit" class="btn btn-primary mt-2">Finish</button>
    </form>
}
@functions {
    // Method to format the question content
    public static string FormatQuestionContext(string context)
    {
        // Replace text between * * with bold tags
        string boldFormatted = System.Text.RegularExpressions.Regex.Replace(context, @"\*(.*?)\*", "<strong>$1</strong>");
        // Wrap each <p> with new lines for proper paragraph spacing
        string paragraphFormatted = boldFormatted.Replace("<p>", "<p style=\"margin-top: 10px;\">");
        return paragraphFormatted;
    }
}
