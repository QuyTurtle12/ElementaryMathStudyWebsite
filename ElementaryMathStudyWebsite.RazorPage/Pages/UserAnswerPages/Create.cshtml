@page
@model ElementaryMathStudyWebsite.RazorPage.Pages.UserAnswerPages.CreateModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>UserAnswer</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <!-- Question Selection -->
            <div class="form-group">
                <label asp-for="UserAnswer.QuestionId" class="control-label">Question</label>
                <select asp-for="UserAnswer.QuestionId" id="question-select" class="form-control">
                    <option value="">-- Select a Question --</option>
                    @foreach (var question in Model.Questions)
                    {
                        <option value="@question.Id">@question.QuestionContext</option>
                    }
                </select>
            </div>

            <!-- User ID (Hidden) -->
            <input type="hidden" asp-for="UserAnswer.UserId" value="@Model.CurrentUserId" />

            <!-- Options (Filtered by Question) -->
            <div class="form-group">
                <label asp-for="UserAnswer.OptionId" class="control-label">Option</label>
                <select asp-for="UserAnswer.OptionId" id="option-select" class="form-control">
                    <option value="">-- Select an Option --</option>
                </select>
            </div>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        // Preload all options grouped by question
        const allOptions = @Html.Raw(Json.Serialize(Model.Options));

        // Event Listener: Update options when a question is selected
        document.getElementById("question-select").addEventListener("change", function () {
            const questionId = this.value;
            const optionSelect = document.getElementById("option-select");
            optionSelect.innerHTML = '<option value="">-- Select an Option --</option>'; // Clear options

            if (!questionId) return; // No question selected

            // Filter options by selected question
            const options = allOptions.filter(option => option.QuestionId === questionId);
            options.forEach(option => {
                const opt = document.createElement("option");
                opt.value = option.Id;
                opt.textContent = option.Answer;
                optionSelect.appendChild(opt);
            });
        });
    </script>
}
